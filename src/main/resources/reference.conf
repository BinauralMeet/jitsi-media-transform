jmt {
  bwe {
    send-side {
      low-loss-threshold = 0.02
      high-loss-threshold = 0.1
      bitrate-threshold = 100 kbps

      loss-experiment {
        probability = 0
        low-loss-threshold = ${jmt.bwe.send-side.low-loss-threshold}
        high-loss-threshold = ${jmt.bwe.send-side.high-loss-threshold}
        bitrate-threshold = ${jmt.bwe.send-side.bitrate-threshold}
      }

      timeout-experiment {
        probability = 0
      }
    }
  }

  transceiver {
      recv {
        # The size of the queue that handles incoming rtp/rtcp packets. This is
        # a per-participant queue and it's where we temporarily store the
        # packets that the endpoint is sending, right after an srtp packet has
        # been received.
        #
        # Assuming 300pps for high-definition, 200pps for standard-definition
        # and 150pps for low-definition, this queue is fed 650pps, so its size
        # in terms of millis is 650/1024*1000 ~= 1260ms.
        queue-size=2048
      }

      send {
        # The size of the queue that handles outgoing rtp/rtcp packets. This is
        # a per-participant queue and it's where we temporarily store the
        # packets right after the ingress pipeline has run.
        #
        # Packets from all the other endpoints in a call end up in the send
        # queue.
        #
        # In a 100 participant call, assuming 300pps for the on-stage, and
        # 150pps for low-definition and last-n 20 this queue is fed
        # 300+19*150 = 3150pps, so its size in terms of millis is
        # 4096/3150*1000 ~= 1300ms.
        queue-size=4096
      }
  }
}